name: flatpak-build
description: Build flatpak
inputs:
  kind:
    description: Flatpak ref kind (app or runtime)
    default: app
    required: true
  id:
    description: Flatpak ID
    required: true
  arch:
    description: Flatpak arch to build
    default: x86_64
    required: true
  branch:
    description: Flatpak branch to build
    default: stable
    required: true
  flatpakrepo_url:
    description: Flatpak repo url
    default: https://dl.russianfedora.online/repo
    required: true
  flatpakrepo_name:
    description: Flatpak repo name
    default: stable
    required: true
  flatpakrepo_token:
    description: Flatpak repo token
    default: foo
    required: true
outputs:
  build-dir:
    value: ${{ steps.build.outputs.build-dir }}
    description: Build directory
  build-repo:
    value: ${{ steps.build.outputs.build-repo }}
    description: OSTree repo with exported build
runs:
  using: composite
  steps:
    - id: find-manifest
      shell: bash
      env:
        FLATPAK_ID: ${{ inputs.id }}
      run: |
        set -e
        if [ -f "$FLATPAK_ID.json" ]; then
            MANIFEST="$FLATPAK_ID.json"
        elif [ -f "$FLATPAK_ID.yml" ]; then
            MANIFEST="$FLATPAK_ID.yml"
        elif [ -f "$FLATPAK_ID.yaml" ]; then
            MANIFEST="$FLATPAK_ID.yaml"
        else
            exit 1
        fi
        echo "::set-output name=manifest::$MANIFEST"

    - id: install-sdk
      shell: bash
      run: |
        set -e
        flatpak remote-add --user --if-not-exists \
                flathub https://flathub.org/repo/flathub.flatpakrepo
        flatpak-builder --install-deps-from=flathub --install-deps-only --user /dev/null \
                        ${{ steps.find-manifest.outputs.manifest }}

    - id: download-sources
      shell: bash
      run: |
        flatpak-builder --download-only /dev/null \
                        ${{ steps.find-manifest.outputs.manifest }}

    - id: build
      shell: bash
      env:
        FP_BUILD_DIR: build-dir
        FP_BUILD_REPO: build-repo
      run: |
        set -e
        flatpak-builder --disable-updates --disable-download --ccache --sandbox \
                        --default-branch=${{ inputs.branch }} \
                        --arch=${{ inputs.arch }} \
                        --repo=${FP_BUILD_REPO} ${FP_BUILD_DIR} \
                        ${{ steps.find-manifest.outputs.manifest }}
        echo "::set-output name=build-dir::${FP_BUILD_DIR}"
        echo "::set-output name=build-repo::${FP_BUILD_REPO}"

    - id: push-to-repo
      shell: bash
      env:
        REPO_TOKEN: flatpakrepo_token
      run: |
        export BUILD_URL=$(flat-manager-client create ${{ inputs.flatpakrepo_url }} ${{ inputs.flatpakrepo_name }})
        flat-manager-client push $BUILD_URL ${{ steps.find-manifest.outputs.build-repo }}
        flat-manager-client commit --wait $BUILD_URL
        flat-manager-client publish --wait $BUILD_URL
